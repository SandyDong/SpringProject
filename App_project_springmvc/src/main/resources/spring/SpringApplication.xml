<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">
     <!--<context:component-scan base-package="com.dong.service.impl"/>-->
    <!-- 加载数据库连接的资源文件 -->
    <!--<context:property-placeholder location="/WEB-INF/classes/data-config/mysql-jdbc.properties"/>-->

    <!-- 配置数据源   dbcp数据库连接池 -->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">&lt;!&ndash;引入低版本的dbcp数据库连接池&ndash;&gt;
    <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
-->
    <!-- 配置sqlSessionFactory -->
   <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        &lt;!&ndash; 数据库连接池 &ndash;&gt;
        <property name="dataSource" ref="dataSource"/>
        &lt;!&ndash; 加载Mybatis全局配置文件 &ndash;&gt;
        <property name="configLocation" value="classpath:/mapper/*.xml"/>

    </bean>-->

    <!-- 配置mapper扫描器 -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        &lt;!&ndash; 扫描包路径，如果需要扫描多个包中间用半角逗号隔开 &ndash;&gt;
        <property name="basePackage" value="com.dong.dao.*"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
-->

    <!--导入dao service层配置文件-->
    <import resource="SpringApplication-dao-service.xml"/>
    <!--导入mybatis配置文件-->
    <import resource="classpath:mybatis/mybatis-config.xml"/>
    <!--执行定时任务类-->
    <import resource="classpath:quartz/quarzt-job.xml"/>
    <!--导入kafka消息生产者配置  Spring集成kafka-->
    <!--<import resource="classpath:kafka/producer-kafka.xml"/>-->
    <!--加载实现ApplicationContextAware的bean对象-->
    <bean id="SpringUtilBean" class="com.dong.utils.SpringBeanUtil"/>
    <!--开启AOP注解,放在此处被加载AOP代理不会生效-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>-->
    <!--执行切面处理非业务相关逻辑-->
    <context:component-scan base-package="com.dong.aspect "/>
    <!--导入邮件发送service类-->
    <import resource="classpath:mail/SpringApplication-mail.xml"/>

</beans>




