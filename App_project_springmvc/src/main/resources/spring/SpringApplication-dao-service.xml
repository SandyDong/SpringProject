<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

     <!-- 自动扫描 dao层  没有相关注解，就不用扫描-->
     <!--<context:component-scan base-package="com.dong.dao" />-->
     <!-- 自动扫描 service层 -->
    <context:component-scan base-package="com.dong.service"/>

     <!-- 引入配置文件 -->
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
          <property name="location" value="classpath:data-config/mysql-jdbc.properties"/>
     </bean>
     <!--引入dbcp数据库连接池-->
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
           destroy-method="close" >
          <property name="driverClassName" value="${driver}" />
          <property name="url" value="${url}" />
          <property name="username" value="${username}" />
          <property name="password" value="${password}" />
          <!-- 初始化连接大小 -->
          <property name="initialSize" value="${initialSize}"></property>
          <!-- 连接池最大数量 -->
          <property name="maxActive" value="${maxActive}"></property>
          <!-- 连接池最大空闲 -->
          <property name="maxIdle" value="${maxIdle}"></property>
          <!-- 连接池最小空闲 -->
          <property name="minIdle" value="${minIdle}"></property>
          <!-- 获取连接最大等待时间 -->
          <property name="maxWait" value="${maxWait}"></property>
     </bean>
    <!--引入druid数据库连接池-->
   <!-- <bean id="propertyConfigure"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:data-config/mysql-jdbc-druid.properties</value>
            </list>
        </property>
    </bean>-->

   <!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        &lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="10" />

        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name="maxWait" value="10000" />

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />

        &lt;!&ndash; 这里建议配置为TRUE，防止取到的连接不可用 &ndash;&gt;
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="false" />

        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20" />

        &lt;!&ndash; 这里配置提交方式，默认就是TRUE，可以不用配置 &ndash;&gt;
        <property name="defaultAutoCommit" value="true" />

        &lt;!&ndash; 验证连接有效与否的SQL，不同的数据配置不同 &ndash;&gt;
        &lt;!&ndash;<property name="validationQuery" value="select 1 " />&ndash;&gt;
        &lt;!&ndash;<property name="filters" value="stat" />&ndash;&gt;
        &lt;!&ndash;<property name="proxyFilters">
            <list>
                <ref bean="logFilter" />
            </list>
        </property>&ndash;&gt;
    </bean>-->

     <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
          <property name="dataSource" ref="dataSource" />
          <!-- 自动扫描mapping.xml文件 -->
          <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
     </bean>
     <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
          <property name="basePackage" value="com.dong.dao" />
          <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
     </bean>
     <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
     <bean id="transactionManager"
           class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource" />
     </bean>

</beans>




